{\rtf1\ansi\ansicpg1252\deff0\uc1
{\fonttbl
{\f0\fnil\fcharset0\fprq0\fttruetype Times New Roman;}
{\f1\fnil\fcharset0\fprq0\fttruetype Courier New;}
{\f2\fnil\fcharset0\fprq0\fttruetype Arial;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;
\red255\green255\blue255;}
{\stylesheet
{\s6\fi-430\li720\sbasedon28\snext28 Contents 1;}
{\s7\fi-430\li1440\sbasedon28\snext28 Contents 2;}
{\s1\fi-430\li720 Arrowhead List;}
{\s27\fi-430\li720\sbasedon28 Lower Roman List;}
{\s29\tx431\sbasedon20\snext28 Numbered Heading 1;}
{\s30\tx431\sbasedon21\snext28 Numbered Heading 2;}
{\s12\fi-430\li720 Diamond List;}
{\s9\fi-430\li2880\sbasedon28\snext28 Contents 4;}
{\s8\fi-430\li2160\sbasedon28\snext28 Contents 3;}
{\s31\tx431\sbasedon22\snext28 Numbered Heading 3;}
{\s32\fi-430\li720 Numbered List;}
{\s15\sbasedon28 Endnote Text;}
{\*\cs14\fs20\super Endnote Reference;}
{\s4\fi-430\li720 Bullet List;}
{\s5\tx1584\sbasedon29\snext28 Chapter Heading;}
{\s35\fi-430\li720 Square List;}
{\s11\fi-430\li720 Dashed List;}
{\s22\sb440\sa60\f2\fs24\b\sbasedon28\snext28 Heading 3;}
{\s37\fi-430\li720 Tick List;}
{\s24\fi-430\li720 Heart List;}
{\s40\fi-430\li720\sbasedon32 Upper Roman List;}
{\s39\fi-430\li720\sbasedon32 Upper Case List;}
{\s16\fi-288\li288\fs20\sbasedon28 Footnote;}
{\s19\fi-430\li720 Hand List;}
{\s18\fs20\sbasedon28 Footnote Text;}
{\s20\sb440\sa60\f2\fs34\b\sbasedon28\snext28 Heading 1;}
{\s21\sb440\sa60\f2\fs28\b\sbasedon28\snext28 Heading 2;}
{\s10\qc\sb240\sa119\f2\fs32\b\sbasedon28\snext28 Contents Header;}
{\s23\sb440\sa60\f2\fs24\b\sbasedon28\snext28 Heading 4;}
{\s28\f0\fs24 Normal;}
{\s26\fi-430\li720\sbasedon32 Lower Case List;}
{\s2\li1440\ri1440\sa119\sbasedon28 Block Text;}
{\s33\f1\sbasedon28 Plain Text;}
{\s34\tx1584\sbasedon29\snext28 Section Heading;}
{\s25\fi-430\li720 Implies List;}
{\s3\fi-430\li720 Box List;}
{\s36\fi-430\li720 Star List;}
{\*\cs17\fs20\super Footnote Reference;}
{\s38\fi-430\li720 Triangle List;}
{\s13\fi-288\li288\sbasedon28 Endnote;}}
{\*\listtable
{\list\listtemplateid1011\listsimple{\listlevel\levelnfc0\levelstartat1\levelspace0\levelfollow0\fi-430\li720{\leveltext\'02\'00.;}{\levelnumbers\'01;}}\listid1000}}
{\*\listoverridetable
{\listoverride\listoverridecount0\listid1000\levelnfc0\levelstartat1\levelspace0\levelfollow0\fi-430\li720{\leveltext\'02\'00.;}{\levelnumbers\'01;}\ls1}}

\kerning0\cf0\ftnbj\fet2\ftnstart1\ftnnar\aftnnar\ftnstart1\aftnstart1\aenddoc\revprop3{\*\rdf}{\info\uc1}\deftab720\viewkind1\paperw12240\paperh15840\margl1440\margr1440\widowctrl
\sectd\sbknone\colsx360\pgncont\ltrsect
\pard\plain\ltrpar\ql\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab \tab \tab \tab Python Lab Exam Questions}{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 1.	}\pard\plain{\ltrpar\ql\fi-430\li720\s28{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u-257 Write a Python program to find those numbers which are divisible by 7 and multiple of 5, between 1500 and 2700 (both included).}{\s28\f0\fs24\lang1033{\*\listtag0}\par}
}\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 2.	}\pard\plain{\ltrpar\ql\fi-430\li720\s28{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u-257 Write a Python program that accepts a word from the user and reverse it. }{\s28\f0\fs24\lang1033{\*\listtag0}\par}
}\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 3.	}\pard\plain{\ltrpar\ql\fi-430\li720\s28{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u-257 }{\s28\f0\fs24\b\lang1033{\*\listtag0} }{\s28\f0\fs24\lang1033{\*\listtag0}Write a Python program to find numbers between 100 and 400 (both included) where each digit of a number is an even number. The numbers obtained should be printed in a comma-separated sequence}{\s28\f0\fs24\lang1033{\*\listtag0}\par}
}\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 4.	}\pard\plain{\ltrpar\ql\fi-430\li720\s28{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u-257 Write a Python program to check a triangle is equilateral, isosceles or scalene.}{\s28\f0\fs24\lang1033{\*\listtag0}\par}
}\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 5.	}\pard\plain{\ltrpar\ql\fi-430\li720\s28{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u-257 Write a Python function that takes a list and returns a new list with unique elements of the first list}{\s28\f0\fs24\lang1033{\*\listtag0}\par}
}\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 6.	}\pard\plain{\ltrpar\ql\fi-430\li720\s28{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u-257 Write a Python function that accepts a string and calculate the number of upper case letters and lower case letters. }{\s28\f0\fs24\lang1033{\*\listtag0}\par}
}\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 7.	}\pard\plain{\ltrpar\ql\fi-430\li720\s28{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Compute nCr=n!/(n-r)!*r! using function for factorial}{\s28\f0\fs24\lang1033{\*\listtag0}\par}
}\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 8.	}\pard\plain{\ltrpar\ql\fi-430\li720\s28{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u-257 Write a Python program to find the roots of a quadratic function. }{\s28\f0\fs24\lang1033{\*\listtag0}\par}
}\pard\plain\ltrpar\ql\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \tab Expected Output :Quadratic function : (a * x^2) + b*x + c                                \line \tab a: 25                                                                   \line \tab b: 64                                                                   \line \tab c: 36                                                                   \line \tab There are 2 roots: -0.834579 and -1.725421}{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 9.	}\pard\plain{\ltrpar\ql\fi-430\li720\s28{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\field{\*\fldinst {\f0\fs24\lang1033{\*\listtag0} HYPERLINK "https://www.w3resource.com/python-exercises/math/python-math-exercise-30.php"}}{\*\fldrslt}}{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u-257 Write a Python program to convert a decimal number to binary number. }{\s28\f0\fs24\lang1033{\*\listtag0}\par}
}\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Expected Output :}{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 10.	}\pard\plain{\ltrpar\ql\fi-430\li720\s33{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\s33\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input a binary number: 101011                                  The decimal value of the number is 43\line }{\s33\f0\fs24\lang1033{\*\listtag0}\par}
}\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 10.\uc0\u-257 Write a Python function that takes a number as a parameter and check the number is prime or not. }{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li720\s28\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\fi-430\li720 11.	}\pard\plain{\ltrpar\ql\fi-430\li720\s28{\*\abilist\abilistid1000\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont NULL}{\abilistdecimal .}{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\fn-430\li720\ls1\ilvl0\sl240\slmult1\itap0{\s28\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \uc0\u-257 Write a Python function that checks whether a passed string is palindrome or not. }{\s28\f0\fs24\lang1033{\*\listtag0}\par}}}